autocmd BufReadPre,BufReadPost SCons* set filetype=python
autocmd BufReadPre,BufReadPost SCons* set syntax=python

"set cwd when swtiching tabs
set autochdir

"Path fix
set nocompatible
set runtimepath+=/usr/share/vim/addons/

" <Leader> := <Space Key>
let mapleader=" "
nnoremap <SPACE> <Nop>

" Install Vundle if not installed and gVim
if has("gui_running")
let iCanHazVundle=1  
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
echo "Installing Vundle.."
echo ""
silent !mkdir -p ~/.vim/bundle
silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
let iCanHazVundle=0
endif
endif

" Use Vundle
filetype off
set runtimepath+=~/.vim/bundle/vundle
call vundle#begin()
Plugin 'gmarik/vundle'
Plugin 'tpope/vim-fugitive'
Plugin 'tomtom/tcomment_vim'
Plugin 'scrooloose/syntastic'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'Valloric/YouCompleteMe'
Plugin 'bling/vim-airline'
Plugin 'Shougo/unite.vim'
Plugin 'ivanov/vim-ipython'
Plugin 'https://github.com/altercation/vim-colors-solarized.git'
call vundle#end()

" Enable vim-airline
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

"autocmd FileType c set softtabstop=4 shiftwidth=4 textwidth=80 expandtab
"autocmd FileType cpp set softtabstop=4 shiftwidth=4 textwidth=80 expandtab
autocmd FileType tex set softtabstop=2 shiftwidth=2 textwidth=90 expandtab
autocmd FileType python set softtabstop=4 shiftwidth=4 textwidth=80 expandtab
autocmd FileType c set softtabstop=4 shiftwidth=4 textwidth=80 expandtab
autocmd FileType cpp set softtabstop=4 shiftwidth=4 textwidth=80 expandtab
autocmd FileType markdown set softtabstop=4 shiftwidth=4 textwidth=80 expandtab

function! s:insert_gates()
  let gatename = substitute(toupper(expand("%:t")), "\\.", "_", "g")
  execute "normal! i#ifndef " . gatename
  execute "normal! o#define " . gatename . " "
  execute "normal! Go#endif /* " . gatename . " */"
  normal! kk
endfunction
autocmd BufNewFile *.{h,hpp} call <SID>insert_gates()

" Solarized colorscheme
let g:solarized_contrast="high"
let g:solarized_visibility="normal"
set background=light
colorscheme solarized
filetype plugin indent on

" Run scons from a parent directory which has SConstruct
function g:Run_scons ()
  let oldpwd = getcwd()
  echo oldpwd
  let sfile = findfile("SConstruct", ".;/home/elio")
  let sroot = fnamemodify(sfile, ":p:h")
  lcd `=sroot`
  !scons
  lcd `=oldpwd`
endfunction

" Define shortcut <F3> for compiling
function g:Map_compile_scons ()
  map <F3> :wall<CR>:call g:Run_scons()<CR>
  imap <F3> <ESC>:wall<CR>:call g:Run_scons()<CR>
endfunction

autocmd BufRead *.tex call g:Map_compile_scons() 
autocmd BufRead *.cpp call g:Map_compile_scons() 

